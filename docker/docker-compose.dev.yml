# Default overrides for running local development.

# Images here are made as "development" images by following the general pattern of defining a multistage build with
# separate prod/dev steps; using APP_ENV to specify which to use. The dev steps should avoid building and instead assume
# that binaries and scripts will be mounted to the image, as also set up by this file. Also see see this excellent
# thread https://github.com/docker/cli/issues/1134.

# To make a JVM app debuggable via IntelliJ, go to its env file and add JVM debug flags, and then add the JVM debug
# port to this file.
---
version: '3.8'
services:
  # Pre-creates the search indices using local mapping/settings.json
  elasticsearch-setup:
    image: 795586375822.dkr.ecr.us-west-2.amazonaws.com/datahub-elasticsearch-setup:debug
    build:
      context: elasticsearch-setup
      dockerfile: Dockerfile
      args:
        APP_ENV: dev
    depends_on:
      - elasticsearch
    volumes:
      - ./elasticsearch-setup/create-indices.sh:/create-indices.sh
      - ../metadata-service/restli-servlet-impl/src/main/resources/index/:/index

  datahub-gms:
    image: 795586375822.dkr.ecr.us-west-2.amazonaws.com/datahub-gms:debug
    build:
      context: datahub-gms
      dockerfile: Dockerfile
      args:
        APP_ENV: dev
    ports:
      - ${DATAHUB_MAPPED_GMS_DEBUG_PORT:-5001}:5001
      - ${DATAHUB_MAPPED_GMS_PORT:-8080}:8080
    environment:
      - SKIP_ELASTICSEARCH_CHECK=false
      - DATAHUB_SERVER_TYPE=${DATAHUB_SERVER_TYPE:-dev}
      - DATAHUB_TELEMETRY_ENABLED=${DATAHUB_TELEMETRY_ENABLED:-true}
      - METADATA_SERVICE_AUTH_ENABLED=false
      - SENTRY_ENVIRONMENT=dev
      # Copy DSN from here https://sentry.io/settings/acryl-data/projects/gms/keys/ in case you wish to try this locally
      - SENTRY_DSN=
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5001
      - BOOTSTRAP_SYSTEM_UPDATE_WAIT_FOR_SYSTEM_UPDATE=false
      - SEARCH_SERVICE_ENABLE_CACHE=false
      - LINEAGE_SEARCH_CACHE_ENABLED=false
    volumes:
      - ./datahub-gms/start.sh:/datahub/datahub-gms/scripts/start.sh
      - ./datahub-gms/jetty.xml:/datahub/datahub-gms/scripts/jetty.xml
      - ./monitoring/client-prometheus-config.yaml:/datahub/datahub-gms/scripts/prometheus-config.yaml
      - ../metadata-models/src/main/resources/:/datahub/datahub-gms/resources
      - ../metadata-service/war/build/libs/:/datahub/datahub-gms/bin
      - ${HOME}/.datahub/plugins:/etc/datahub/plugins

  datahub-frontend-react:
    image: 795586375822.dkr.ecr.us-west-2.amazonaws.com/datahub-frontend-react:debug
    build:
      context: ../
      dockerfile: docker/datahub-frontend/Dockerfile
      args:
        APP_ENV: dev
    ports:
      - ${DATAHUB_MAPPED_FRONTEND_DEBUG_PORT:-5002}:5002
      - ${DATAHUB_MAPPED_FRONTEND_PORT:-9002}:9002
    environment:
      - SENTRY_ENVIRONMENT=dev
      # copy DSN from here https://sentry.io/settings/acryl-data/projects/frontend/keys/ in case you wish to try this locally
      - SENTRY_DSN=
      - JAVA_TOOL_OPTIONS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5002
      - DATAHUB_ANALYTICS_ENABLED=${DATAHUB_ANALYTICS_ENABLED:-true}
    volumes:
      - ../datahub-frontend/build/stage/playBinary:/datahub-frontend

  datahub-upgrade:
    image: 795586375822.dkr.ecr.us-west-2.amazonaws.com/datahub-upgrade:debug
    build:
      context: datahub-upgrade
      dockerfile: Dockerfile
      args:
        APP_ENV: dev
    environment:
      - SKIP_ELASTICSEARCH_CHECK=false
      - DATAHUB_SERVER_TYPE=${DATAHUB_SERVER_TYPE:-dev}
      - DATAHUB_TELEMETRY_ENABLED=${DATAHUB_TELEMETRY_ENABLED:-true}
    volumes:
      - ../datahub-upgrade/build/libs/:/datahub/datahub-upgrade/bin/
      - ../metadata-models/src/main/resources/:/datahub/datahub-gms/resources