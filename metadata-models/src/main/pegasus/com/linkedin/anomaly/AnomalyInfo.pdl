namespace com.linkedin.anomaly

import com.linkedin.common.AuditStamp
import com.linkedin.common.EntityReference
import com.linkedin.common.Urn

/**
 * Information about an anomaly raised on an asset.
 */
@Aspect = {
  "name": "anomalyInfo"
}
record AnomalyInfo {
  /**
  * The type of anomaly
  */
  @Searchable = {
    "addToFilters": true,
    "filterNameOverride": "Type"
  }
  type: AnomalyType

  /**
  * Optional description associated with the anomaly. e.g. an explanation in human-readable form.
  */
  description: optional string

  /**
   * A reference to the entity associated with the anomaly.
   */
  @Relationship = {
    "name": "AnomalyOn",
    "entityTypes": [ "dataset", "chart", "dashboard", "dataFlow", "dataJob", "schemaField" ]
  }
  @Searchable = {
    "fieldType": "URN"
  }
  entity: Urn

  /**
  * A numeric severity for the anomaly.
  * This reflects the significance of the anomaly and is based on
  * how far out of the norm the anomaly resides.
  */
  @Searchable = {
    "addToFilters": true,
    "filterNameOverride": "Severity"
  }
  severity: optional int = 0

  /**
   * The current status of the anomaly, whether it is active or resolved.
   */
  status: AnomalyStatus

  /**
   * The review of the anomaly, based on human-provided feedback.
   */
  review: AnomalyReview

  /**
   * The source of an anomaly, i.e. how it was generated.
   */
  source: AnomalySource

  /**
   * The time at which the request was initially created
   */
  @Searchable = {
    "/time": {
      "fieldName": "created",
      "fieldType": "DATETIME"
    }
  }
  created: AuditStamp
}