extend type Dataset {
    """
    Anomalies associated with the Dataset
    """
    anomalies(
      """
      Optional anomaly state to filter by, defaults to any state.
      """
      state: AnomalyState,
      """
      Optional start offset, defaults to 0.
      """
      start: Int,
      """
      Optional start offset, defaults to 20.
      """
      count: Int): EntityAnomaliesResult
}

extend type DataJob {
    """
    Anomalies associated with the DataJob
    """
    anomalies(
      """
      Optional anomaly state to filter by, defaults to any state.
      """
      state: AnomalyState,
      """
      Optional start offset, defaults to 0.
      """
      start: Int,
      """
      Optional start offset, defaults to 20.
      """
      count: Int): EntityAnomaliesResult
}

"""
A list of Anomalies Associated with an Entity
"""
type EntityAnomaliesResult {
  """
  The starting offset of the result set returned
  """
  start: Int!

  """
  The number of assertions in the returned result set
  """
  count: Int!

  """
  The total number of assertions in the result set
  """
  total: Int!

  """
  The Anomalies themselves
  """
  anomalies: [Anomaly!]!
}

"""
A warning generated when DataHub observes an anomalous trend around a data asset.
"""
type Anomaly implements Entity {

  """
  The unique identifier for the Anomaly
  """
  urn: String!

  """
  The standard entity type field.
  """
  type: EntityType!

  """
  The type of the Anomaly.
  """
  anomalyType: AnomalyType!

  """
  Optional description associated with the anomaly. e.g. an explanation in human-readable form.
  """
  description: String

  """
  A reference to the entity associated with the Anomaly.
  """
  entity: Entity!

  """
  A numeric severity for the Anomaly. This reflects the significance of the anomaly and is based on how far out of the norm the anomaly resides.
  """
  severity: Int

  """
  The current status of the Anomaly, whether it is active or resolved.
  """
  status: AnomalyStatus!

  """
  The review of the Anomaly, based on human-provided feedback.
  """
  review: AnomalyReview!

  """
  The source of an Anomaly, i.e. how it was generated.
  """
  source: AnomalySource!

  """
  The time at which the request was initially created
  """
  created: AuditStamp!

  """
  List of relationships between the source Entity and some destination entities with a given types
  """
  relationships(input: RelationshipsInput!): EntityRelationshipsResult
}

"""
A human review of an Anomaly
"""
type AnomalyReview {
  """
  The state of the Anomaly
  """
  state: AnomalyReviewState!

  """
  An optional explanation of the review.
  """
  message: String

  """
  The time at which the Anomaly review state last changed
  """
  lastUpdated: AuditStamp!
}

"""
The source of the Anomaly
"""
type AnomalySource {
  """
  Message associated with the Anomaly
  """
  type: AnomalySourceType!

  """
  Entity related to the source of an Anomaly. If this anomaly was raised due to an inferred assertion failure, then this will contain the urn of the source Assertion.
  """
  source: Entity
}

"""
The current status of an Anomaly.
"""
type AnomalyStatus {
  """
  The state of the Anomaly
  """
  state: AnomalyState!

  """
  The time at which the Anomaly state last changed
  """
  lastUpdated: AuditStamp!
}

"""
A type of an Anomaly
"""
enum AnomalyType {
  """
  An inferred Freshness Assertion has failed, triggering the Anomaly.
  """
  FRESHNESS

  """
  An inferred assertion on a particular column(s) of a Dataset has triggered the Anomaly.
  """
  DATASET_COLUMN

  """
  An inferred assertion on the row count of a Dataset has triggered the Anomaly.
  """
  DATASET_ROWS
}

"""
The human-provided review of the Anomaly
"""
enum AnomalyReviewState {
  """
  The Anomaly is pending human review.
  """
  PENDING

  """
  The Anomaly has been confirmed by a human reviewer. This means the anomaly was validated.
  """
  CONFIRMED

  """
  The Anomaly has been dismissed, or ignored, by a human reviewer. This means the anomaly should have been ignored.
  """
  REJECTED
}

"""
Information about the source of an Anomaly raised on an asset
"""
enum AnomalySourceType {
  """
  An assertion has failed, triggering the Anomaly.
  """
  INFERRED_ASSERTION_FAILURE
}

"""
The status of an Anomaly raised on an asset
"""
enum AnomalyState {
  """
  The Anomaly is ongoing, or active.
  """
  ACTIVE

  """
  The Anomaly is resolved.
  """
  RESOLVED
}